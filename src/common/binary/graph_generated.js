// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var graph = graph || {};

/**
 * @enum {number}
 */
graph.GraphNode = {
  NONE: 0,
  GraphBranch: 1,
  GraphLeaf: 2,
  GraphRange: 3,
  GraphLink: 4
};

/**
 * @enum {string}
 */
graph.GraphNodeName = {
  '0': 'NONE',
  '1': 'GraphBranch',
  '2': 'GraphLeaf',
  '3': 'GraphRange',
  '4': 'GraphLink'
};

/**
 * @constructor
 */
graph.GraphRoot = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphRoot}
 */
graph.GraphRoot.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphRoot=} obj
 * @returns {graph.GraphRoot}
 */
graph.GraphRoot.getRootAsGraphRoot = function(bb, obj) {
  return (obj || new graph.GraphRoot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphRoot=} obj
 * @returns {graph.GraphRoot}
 */
graph.GraphRoot.getSizePrefixedRootAsGraphRoot = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphRoot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphRoot.prototype.options = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphRoot.prototype.optionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphRoot.prototype.optionsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {graph.GraphList=} obj
 * @returns {graph.GraphList}
 */
graph.GraphRoot.prototype.children = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new graph.GraphList).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
graph.GraphRoot.prototype.childrenLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphRoot.prototype.version = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphRoot.prototype.versionLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphRoot.prototype.versionArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphRoot.startGraphRoot = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
graph.GraphRoot.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(0, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphRoot.createOptionsVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphRoot.startOptionsVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 */
graph.GraphRoot.addChildren = function(builder, childrenOffset) {
  builder.addFieldOffset(1, childrenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphRoot.createChildrenVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphRoot.startChildrenVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} versionOffset
 */
graph.GraphRoot.addVersion = function(builder, versionOffset) {
  builder.addFieldOffset(2, versionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphRoot.createVersionVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphRoot.startVersionVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphRoot.endGraphRoot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
graph.GraphRoot.finishGraphRootBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
graph.GraphRoot.finishSizePrefixedGraphRootBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} childrenOffset
 * @param {flatbuffers.Offset} versionOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphRoot.createGraphRoot = function(builder, optionsOffset, childrenOffset, versionOffset) {
  graph.GraphRoot.startGraphRoot(builder);
  graph.GraphRoot.addOptions(builder, optionsOffset);
  graph.GraphRoot.addChildren(builder, childrenOffset);
  graph.GraphRoot.addVersion(builder, versionOffset);
  return graph.GraphRoot.endGraphRoot(builder);
}

/**
 * @constructor
 */
graph.GraphList = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphList}
 */
graph.GraphList.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphList=} obj
 * @returns {graph.GraphList}
 */
graph.GraphList.getRootAsGraphList = function(bb, obj) {
  return (obj || new graph.GraphList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphList=} obj
 * @returns {graph.GraphList}
 */
graph.GraphList.getSizePrefixedRootAsGraphList = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphList.prototype.prefix = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphList.prototype.prefixLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphList.prototype.prefixArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {graph.GraphItem=} obj
 * @returns {graph.GraphItem}
 */
graph.GraphList.prototype.items = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new graph.GraphItem).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
graph.GraphList.prototype.itemsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphList.startGraphList = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefixOffset
 */
graph.GraphList.addPrefix = function(builder, prefixOffset) {
  builder.addFieldOffset(0, prefixOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphList.createPrefixVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphList.startPrefixVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} itemsOffset
 */
graph.GraphList.addItems = function(builder, itemsOffset) {
  builder.addFieldOffset(1, itemsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphList.createItemsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphList.startItemsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphList.endGraphList = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefixOffset
 * @param {flatbuffers.Offset} itemsOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphList.createGraphList = function(builder, prefixOffset, itemsOffset) {
  graph.GraphList.startGraphList(builder);
  graph.GraphList.addPrefix(builder, prefixOffset);
  graph.GraphList.addItems(builder, itemsOffset);
  return graph.GraphList.endGraphList(builder);
}

/**
 * @constructor
 */
graph.GraphItem = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphItem}
 */
graph.GraphItem.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphItem=} obj
 * @returns {graph.GraphItem}
 */
graph.GraphItem.getRootAsGraphItem = function(bb, obj) {
  return (obj || new graph.GraphItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphItem=} obj
 * @returns {graph.GraphItem}
 */
graph.GraphItem.getSizePrefixedRootAsGraphItem = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphItem.prototype.key = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphItem.prototype.keyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphItem.prototype.keyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphItem.prototype.version = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphItem.prototype.versionLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphItem.prototype.versionArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {graph.GraphNode}
 */
graph.GraphItem.prototype.nodeType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {graph.GraphNode} */ (this.bb.readUint8(this.bb_pos + offset)) : graph.GraphNode.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
graph.GraphItem.prototype.node = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphItem.startGraphItem = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
graph.GraphItem.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphItem.createKeyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphItem.startKeyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} versionOffset
 */
graph.GraphItem.addVersion = function(builder, versionOffset) {
  builder.addFieldOffset(1, versionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphItem.createVersionVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphItem.startVersionVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {graph.GraphNode} nodeType
 */
graph.GraphItem.addNodeType = function(builder, nodeType) {
  builder.addFieldInt8(2, nodeType, graph.GraphNode.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeOffset
 */
graph.GraphItem.addNode = function(builder, nodeOffset) {
  builder.addFieldOffset(3, nodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphItem.endGraphItem = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 * @param {flatbuffers.Offset} versionOffset
 * @param {graph.GraphNode} nodeType
 * @param {flatbuffers.Offset} nodeOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphItem.createGraphItem = function(builder, keyOffset, versionOffset, nodeType, nodeOffset) {
  graph.GraphItem.startGraphItem(builder);
  graph.GraphItem.addKey(builder, keyOffset);
  graph.GraphItem.addVersion(builder, versionOffset);
  graph.GraphItem.addNodeType(builder, nodeType);
  graph.GraphItem.addNode(builder, nodeOffset);
  return graph.GraphItem.endGraphItem(builder);
}

/**
 * @constructor
 */
graph.GraphBranch = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphBranch}
 */
graph.GraphBranch.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphBranch=} obj
 * @returns {graph.GraphBranch}
 */
graph.GraphBranch.getRootAsGraphBranch = function(bb, obj) {
  return (obj || new graph.GraphBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphBranch=} obj
 * @returns {graph.GraphBranch}
 */
graph.GraphBranch.getSizePrefixedRootAsGraphBranch = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {graph.GraphList=} obj
 * @returns {graph.GraphList}
 */
graph.GraphBranch.prototype.children = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new graph.GraphList).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
graph.GraphBranch.prototype.childrenLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphBranch.startGraphBranch = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 */
graph.GraphBranch.addChildren = function(builder, childrenOffset) {
  builder.addFieldOffset(0, childrenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphBranch.createChildrenVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphBranch.startChildrenVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphBranch.endGraphBranch = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphBranch.createGraphBranch = function(builder, childrenOffset) {
  graph.GraphBranch.startGraphBranch(builder);
  graph.GraphBranch.addChildren(builder, childrenOffset);
  return graph.GraphBranch.endGraphBranch(builder);
}

/**
 * @constructor
 */
graph.GraphLeaf = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphLeaf}
 */
graph.GraphLeaf.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphLeaf=} obj
 * @returns {graph.GraphLeaf}
 */
graph.GraphLeaf.getRootAsGraphLeaf = function(bb, obj) {
  return (obj || new graph.GraphLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphLeaf=} obj
 * @returns {graph.GraphLeaf}
 */
graph.GraphLeaf.getSizePrefixedRootAsGraphLeaf = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphLeaf.prototype.value = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphLeaf.prototype.valueLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphLeaf.prototype.valueArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphLeaf.startGraphLeaf = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
graph.GraphLeaf.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphLeaf.createValueVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphLeaf.startValueVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphLeaf.endGraphLeaf = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphLeaf.createGraphLeaf = function(builder, valueOffset) {
  graph.GraphLeaf.startGraphLeaf(builder);
  graph.GraphLeaf.addValue(builder, valueOffset);
  return graph.GraphLeaf.endGraphLeaf(builder);
}

/**
 * @constructor
 */
graph.GraphRange = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphRange}
 */
graph.GraphRange.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphRange=} obj
 * @returns {graph.GraphRange}
 */
graph.GraphRange.getRootAsGraphRange = function(bb, obj) {
  return (obj || new graph.GraphRange).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphRange=} obj
 * @returns {graph.GraphRange}
 */
graph.GraphRange.getSizePrefixedRootAsGraphRange = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphRange).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.GraphRange.prototype.end = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.GraphRange.prototype.endLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.GraphRange.prototype.endArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphRange.startGraphRange = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 */
graph.GraphRange.addEnd = function(builder, endOffset) {
  builder.addFieldOffset(0, endOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphRange.createEndVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphRange.startEndVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphRange.endGraphRange = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphRange.createGraphRange = function(builder, endOffset) {
  graph.GraphRange.startGraphRange(builder);
  graph.GraphRange.addEnd(builder, endOffset);
  return graph.GraphRange.endGraphRange(builder);
}

/**
 * @constructor
 */
graph.GraphLink = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.GraphLink}
 */
graph.GraphLink.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphLink=} obj
 * @returns {graph.GraphLink}
 */
graph.GraphLink.getRootAsGraphLink = function(bb, obj) {
  return (obj || new graph.GraphLink).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.GraphLink=} obj
 * @returns {graph.GraphLink}
 */
graph.GraphLink.getSizePrefixedRootAsGraphLink = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.GraphLink).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {graph.PathSeg=} obj
 * @returns {graph.PathSeg}
 */
graph.GraphLink.prototype.path = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new graph.PathSeg).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
graph.GraphLink.prototype.pathLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.GraphLink.startGraphLink = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pathOffset
 */
graph.GraphLink.addPath = function(builder, pathOffset) {
  builder.addFieldOffset(0, pathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
graph.GraphLink.createPathVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.GraphLink.startPathVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.GraphLink.endGraphLink = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pathOffset
 * @returns {flatbuffers.Offset}
 */
graph.GraphLink.createGraphLink = function(builder, pathOffset) {
  graph.GraphLink.startGraphLink(builder);
  graph.GraphLink.addPath(builder, pathOffset);
  return graph.GraphLink.endGraphLink(builder);
}

/**
 * @constructor
 */
graph.PathSeg = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {graph.PathSeg}
 */
graph.PathSeg.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.PathSeg=} obj
 * @returns {graph.PathSeg}
 */
graph.PathSeg.getRootAsPathSeg = function(bb, obj) {
  return (obj || new graph.PathSeg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {graph.PathSeg=} obj
 * @returns {graph.PathSeg}
 */
graph.PathSeg.getSizePrefixedRootAsPathSeg = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new graph.PathSeg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
graph.PathSeg.prototype.key = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
graph.PathSeg.prototype.keyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
graph.PathSeg.prototype.keyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {boolean}
 */
graph.PathSeg.prototype.isprefix = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
graph.PathSeg.startPathSeg = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
graph.PathSeg.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
graph.PathSeg.createKeyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
graph.PathSeg.startKeyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isprefix
 */
graph.PathSeg.addIsprefix = function(builder, isprefix) {
  builder.addFieldInt8(1, +isprefix, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
graph.PathSeg.endPathSeg = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 * @param {boolean} isprefix
 * @returns {flatbuffers.Offset}
 */
graph.PathSeg.createPathSeg = function(builder, keyOffset, isprefix) {
  graph.PathSeg.startPathSeg(builder);
  graph.PathSeg.addKey(builder, keyOffset);
  graph.PathSeg.addIsprefix(builder, isprefix);
  return graph.PathSeg.endPathSeg(builder);
}

// Exports for ECMAScript6 Modules
export {graph};
