// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var query = query || {};

/**
 * @enum {number}
 */
query.QueryNode = {
  NONE: 0,
  QueryBranch: 1,
  QueryLeaf: 2,
  QueryRangeBranch: 3,
  QueryRangeLeaf: 4
};

/**
 * @enum {string}
 */
query.QueryNodeName = {
  '0': 'NONE',
  '1': 'QueryBranch',
  '2': 'QueryLeaf',
  '3': 'QueryRangeBranch',
  '4': 'QueryRangeLeaf'
};

/**
 * @constructor
 */
query.QueryRoot = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryRoot}
 */
query.QueryRoot.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRoot=} obj
 * @returns {query.QueryRoot}
 */
query.QueryRoot.getRootAsQueryRoot = function(bb, obj) {
  return (obj || new query.QueryRoot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRoot=} obj
 * @returns {query.QueryRoot}
 */
query.QueryRoot.getSizePrefixedRootAsQueryRoot = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryRoot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryRoot.prototype.options = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryRoot.prototype.optionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryRoot.prototype.optionsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {query.QueryList=} obj
 * @returns {query.QueryList}
 */
query.QueryRoot.prototype.children = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new query.QueryList).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
query.QueryRoot.prototype.childrenLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryRoot.prototype.version = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryRoot.prototype.versionLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryRoot.prototype.versionArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryRoot.startQueryRoot = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
query.QueryRoot.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(0, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRoot.createOptionsVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRoot.startOptionsVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 */
query.QueryRoot.addChildren = function(builder, childrenOffset) {
  builder.addFieldOffset(1, childrenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRoot.createChildrenVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRoot.startChildrenVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} versionOffset
 */
query.QueryRoot.addVersion = function(builder, versionOffset) {
  builder.addFieldOffset(2, versionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRoot.createVersionVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRoot.startVersionVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryRoot.endQueryRoot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
query.QueryRoot.finishQueryRootBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
query.QueryRoot.finishSizePrefixedQueryRootBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} childrenOffset
 * @param {flatbuffers.Offset} versionOffset
 * @returns {flatbuffers.Offset}
 */
query.QueryRoot.createQueryRoot = function(builder, optionsOffset, childrenOffset, versionOffset) {
  query.QueryRoot.startQueryRoot(builder);
  query.QueryRoot.addOptions(builder, optionsOffset);
  query.QueryRoot.addChildren(builder, childrenOffset);
  query.QueryRoot.addVersion(builder, versionOffset);
  return query.QueryRoot.endQueryRoot(builder);
}

/**
 * @constructor
 */
query.QueryList = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryList}
 */
query.QueryList.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryList=} obj
 * @returns {query.QueryList}
 */
query.QueryList.getRootAsQueryList = function(bb, obj) {
  return (obj || new query.QueryList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryList=} obj
 * @returns {query.QueryList}
 */
query.QueryList.getSizePrefixedRootAsQueryList = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryList.prototype.prefix = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryList.prototype.prefixLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryList.prototype.prefixArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {query.QueryItem=} obj
 * @returns {query.QueryItem}
 */
query.QueryList.prototype.nodes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new query.QueryItem).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
query.QueryList.prototype.nodesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryList.startQueryList = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefixOffset
 */
query.QueryList.addPrefix = function(builder, prefixOffset) {
  builder.addFieldOffset(0, prefixOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryList.createPrefixVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryList.startPrefixVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodesOffset
 */
query.QueryList.addNodes = function(builder, nodesOffset) {
  builder.addFieldOffset(1, nodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryList.createNodesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryList.startNodesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryList.endQueryList = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefixOffset
 * @param {flatbuffers.Offset} nodesOffset
 * @returns {flatbuffers.Offset}
 */
query.QueryList.createQueryList = function(builder, prefixOffset, nodesOffset) {
  query.QueryList.startQueryList(builder);
  query.QueryList.addPrefix(builder, prefixOffset);
  query.QueryList.addNodes(builder, nodesOffset);
  return query.QueryList.endQueryList(builder);
}

/**
 * @constructor
 */
query.QueryItem = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryItem}
 */
query.QueryItem.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryItem=} obj
 * @returns {query.QueryItem}
 */
query.QueryItem.getRootAsQueryItem = function(bb, obj) {
  return (obj || new query.QueryItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryItem=} obj
 * @returns {query.QueryItem}
 */
query.QueryItem.getSizePrefixedRootAsQueryItem = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryItem.prototype.key = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryItem.prototype.keyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryItem.prototype.keyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryItem.prototype.version = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryItem.prototype.versionLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryItem.prototype.versionArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {query.QueryNode}
 */
query.QueryItem.prototype.nodeType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {query.QueryNode} */ (this.bb.readUint8(this.bb_pos + offset)) : query.QueryNode.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
query.QueryItem.prototype.node = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryItem.startQueryItem = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
query.QueryItem.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryItem.createKeyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryItem.startKeyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} versionOffset
 */
query.QueryItem.addVersion = function(builder, versionOffset) {
  builder.addFieldOffset(1, versionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryItem.createVersionVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryItem.startVersionVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {query.QueryNode} nodeType
 */
query.QueryItem.addNodeType = function(builder, nodeType) {
  builder.addFieldInt8(2, nodeType, query.QueryNode.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeOffset
 */
query.QueryItem.addNode = function(builder, nodeOffset) {
  builder.addFieldOffset(3, nodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryItem.endQueryItem = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 * @param {flatbuffers.Offset} versionOffset
 * @param {query.QueryNode} nodeType
 * @param {flatbuffers.Offset} nodeOffset
 * @returns {flatbuffers.Offset}
 */
query.QueryItem.createQueryItem = function(builder, keyOffset, versionOffset, nodeType, nodeOffset) {
  query.QueryItem.startQueryItem(builder);
  query.QueryItem.addKey(builder, keyOffset);
  query.QueryItem.addVersion(builder, versionOffset);
  query.QueryItem.addNodeType(builder, nodeType);
  query.QueryItem.addNode(builder, nodeOffset);
  return query.QueryItem.endQueryItem(builder);
}

/**
 * @constructor
 */
query.QueryBranch = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryBranch}
 */
query.QueryBranch.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryBranch=} obj
 * @returns {query.QueryBranch}
 */
query.QueryBranch.getRootAsQueryBranch = function(bb, obj) {
  return (obj || new query.QueryBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryBranch=} obj
 * @returns {query.QueryBranch}
 */
query.QueryBranch.getSizePrefixedRootAsQueryBranch = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {query.QueryList=} obj
 * @returns {query.QueryList}
 */
query.QueryBranch.prototype.children = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new query.QueryList).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
query.QueryBranch.prototype.childrenLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryBranch.startQueryBranch = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 */
query.QueryBranch.addChildren = function(builder, childrenOffset) {
  builder.addFieldOffset(0, childrenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryBranch.createChildrenVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryBranch.startChildrenVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryBranch.endQueryBranch = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 * @returns {flatbuffers.Offset}
 */
query.QueryBranch.createQueryBranch = function(builder, childrenOffset) {
  query.QueryBranch.startQueryBranch(builder);
  query.QueryBranch.addChildren(builder, childrenOffset);
  return query.QueryBranch.endQueryBranch(builder);
}

/**
 * @constructor
 */
query.QueryLeaf = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryLeaf}
 */
query.QueryLeaf.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryLeaf=} obj
 * @returns {query.QueryLeaf}
 */
query.QueryLeaf.getRootAsQueryLeaf = function(bb, obj) {
  return (obj || new query.QueryLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryLeaf=} obj
 * @returns {query.QueryLeaf}
 */
query.QueryLeaf.getSizePrefixedRootAsQueryLeaf = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
query.QueryLeaf.prototype.sum = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryLeaf.startQueryLeaf = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sum
 */
query.QueryLeaf.addSum = function(builder, sum) {
  builder.addFieldInt16(0, sum, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryLeaf.endQueryLeaf = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sum
 * @returns {flatbuffers.Offset}
 */
query.QueryLeaf.createQueryLeaf = function(builder, sum) {
  query.QueryLeaf.startQueryLeaf(builder);
  query.QueryLeaf.addSum(builder, sum);
  return query.QueryLeaf.endQueryLeaf(builder);
}

/**
 * @constructor
 */
query.QueryRangeBranch = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryRangeBranch}
 */
query.QueryRangeBranch.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRangeBranch=} obj
 * @returns {query.QueryRangeBranch}
 */
query.QueryRangeBranch.getRootAsQueryRangeBranch = function(bb, obj) {
  return (obj || new query.QueryRangeBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRangeBranch=} obj
 * @returns {query.QueryRangeBranch}
 */
query.QueryRangeBranch.getSizePrefixedRootAsQueryRangeBranch = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryRangeBranch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryRangeBranch.prototype.end = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryRangeBranch.prototype.endLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryRangeBranch.prototype.endArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
query.QueryRangeBranch.prototype.limit = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {query.QueryList=} obj
 * @returns {query.QueryList}
 */
query.QueryRangeBranch.prototype.children = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new query.QueryList).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
query.QueryRangeBranch.prototype.childrenLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryRangeBranch.startQueryRangeBranch = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 */
query.QueryRangeBranch.addEnd = function(builder, endOffset) {
  builder.addFieldOffset(0, endOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeBranch.createEndVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRangeBranch.startEndVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} limit
 */
query.QueryRangeBranch.addLimit = function(builder, limit) {
  builder.addFieldInt16(1, limit, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childrenOffset
 */
query.QueryRangeBranch.addChildren = function(builder, childrenOffset) {
  builder.addFieldOffset(2, childrenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeBranch.createChildrenVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRangeBranch.startChildrenVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeBranch.endQueryRangeBranch = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 * @param {number} limit
 * @param {flatbuffers.Offset} childrenOffset
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeBranch.createQueryRangeBranch = function(builder, endOffset, limit, childrenOffset) {
  query.QueryRangeBranch.startQueryRangeBranch(builder);
  query.QueryRangeBranch.addEnd(builder, endOffset);
  query.QueryRangeBranch.addLimit(builder, limit);
  query.QueryRangeBranch.addChildren(builder, childrenOffset);
  return query.QueryRangeBranch.endQueryRangeBranch(builder);
}

/**
 * @constructor
 */
query.QueryRangeLeaf = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {query.QueryRangeLeaf}
 */
query.QueryRangeLeaf.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRangeLeaf=} obj
 * @returns {query.QueryRangeLeaf}
 */
query.QueryRangeLeaf.getRootAsQueryRangeLeaf = function(bb, obj) {
  return (obj || new query.QueryRangeLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {query.QueryRangeLeaf=} obj
 * @returns {query.QueryRangeLeaf}
 */
query.QueryRangeLeaf.getSizePrefixedRootAsQueryRangeLeaf = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new query.QueryRangeLeaf).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
query.QueryRangeLeaf.prototype.end = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
query.QueryRangeLeaf.prototype.endLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
query.QueryRangeLeaf.prototype.endArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
query.QueryRangeLeaf.prototype.limit = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
query.QueryRangeLeaf.prototype.sum = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
query.QueryRangeLeaf.startQueryRangeLeaf = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 */
query.QueryRangeLeaf.addEnd = function(builder, endOffset) {
  builder.addFieldOffset(0, endOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeLeaf.createEndVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
query.QueryRangeLeaf.startEndVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} limit
 */
query.QueryRangeLeaf.addLimit = function(builder, limit) {
  builder.addFieldInt16(1, limit, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sum
 */
query.QueryRangeLeaf.addSum = function(builder, sum) {
  builder.addFieldInt16(2, sum, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeLeaf.endQueryRangeLeaf = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endOffset
 * @param {number} limit
 * @param {number} sum
 * @returns {flatbuffers.Offset}
 */
query.QueryRangeLeaf.createQueryRangeLeaf = function(builder, endOffset, limit, sum) {
  query.QueryRangeLeaf.startQueryRangeLeaf(builder);
  query.QueryRangeLeaf.addEnd(builder, endOffset);
  query.QueryRangeLeaf.addLimit(builder, limit);
  query.QueryRangeLeaf.addSum(builder, sum);
  return query.QueryRangeLeaf.endQueryRangeLeaf(builder);
}

// Exports for ECMAScript6 Modules
export {query};
